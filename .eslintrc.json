{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/jsx-runtime",
    "plugin:i18next/recommended"
// printWidth в prettier нельзя отключить для деструктуризации объектов, а нужно, чтобы каждая переменная была на новой строке
//    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint"
//    "prettier"
  ],
  "rules": {
    "max-len": ["error", { "code": 100,"ignoreComments": true }],
    "react/jsx-uses-react": "off",
    "react/prop-types": "off",
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
    // eslint должен сам проставить безопасные исключения
    // const a = 1
    // ;[1, 2, 3].forEach(console.log)
    "semi": ["error", "never"],
    // деструктуризация и объекты - каждое поле на новой строке / не отработало
    "object-curly-newline": "off",
//    "prettier/prettier": [
//      "error",
//      {
//        "endOfLine": "auto",
//        "semi": false,
//        "trailingComma": "es5",
//        "singleQuote": true,
//        "printWidth": 100,
//        "tabWidth": 4,
//        // jsx - каждый атрибут на новую строку
//        "bracketSameLine": false,
//        "object-curly-newline": "off"
//      }
//    ],
    "i18next/no-literal-string": [
      "error",
      {
        "markUpOnly": true,
        "ignoreAttribute": [
          "data-testid", "to"
        ]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "overrides": [
    {
      "files": ["**/src/**/*.test.{ts, tsx}"],
      "rules": {
        "i18next/no-literal-string": "off"
      }
    },
    {
      "files": ["*.stories.tsx"],
      "rules": {
        "@typescript-eslint/no-unused-vars": "off"
      }
    }
  ]
}